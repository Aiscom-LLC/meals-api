{
    "swagger": "2.0",
    "info": {
        "title": "AIS Catering",
        "contact": {},
        "license": {},
        "version": "1.0.0"
    },
    "paths": {
        "/caterings": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "catering"
                ],
                "summary": "Returns list of caterings",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "used for pagination",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "used for pagination",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of caterings",
                        "schema": {
                            "$ref": "#/definitions/GetCateringsResponse"
                        }
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "catering"
                ],
                "summary": "Returns error or 201 status code if success",
                "parameters": [
                    {
                        "description": "Catering Name",
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/AddNameRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "catering object",
                        "schema": {
                            "$ref": "#/definitions/CateringsResponse"
                        }
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/caterings/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "catering"
                ],
                "summary": "Returns info about catering",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Catering ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "catering model",
                        "schema": {
                            "$ref": "#/definitions/CateringsResponse"
                        }
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "catering"
                ],
                "summary": "Returns 204 if success and 4xx error if failed",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Catering ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Catering Name",
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/AddNameRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successfully updated"
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "catering"
                ],
                "summary": "Soft delete",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Catering ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successfully deleted"
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/caterings/{id}/clients": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "clients"
                ],
                "summary": "Returns list of clients",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Catering ID",
                        "name": "id",
                        "in": "path"
                    },
                    {
                        "type": "integer",
                        "description": "used for pagination",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "used for pagination",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of clients",
                        "schema": {
                            "$ref": "#/definitions/GetClients"
                        }
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "caterings clients"
                ],
                "summary": "Returns error or 201 status code if success",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Catering ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Client Name",
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/AddNameRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "client object",
                        "schema": {
                            "$ref": "#/definitions/ClientsResponse"
                        }
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/caterings/{id}/clients-orders": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "caterings clients"
                ],
                "summary": "Returns list of clients orders",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Catering ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Date query in YYYY-MM-DDT00:00:00Z format",
                        "name": "date",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "used for pagination",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "used for pagination",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of clients orders",
                        "schema": {
                            "$ref": "#/definitions/swagger.GetCateringClientsSwagger"
                        }
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/caterings/{id}/clients/{clientId}/categories": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "catering categories"
                ],
                "summary": "Get list of categories",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Catering ID",
                        "name": "id",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "Client ID",
                        "name": "clientId",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "in format YYYY-MM-DDT00:00:00Z",
                        "name": "date",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "array of category readings",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CategoryResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "catering categories"
                ],
                "summary": "Returns error if exists and 200 if success",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Catering ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Client ID",
                        "name": "clientId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Category Name",
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/AddCategoryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "category object",
                        "schema": {
                            "$ref": "#/definitions/api.Category"
                        }
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/caterings/{id}/clients/{clientId}/categories/{categoryID}": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "catering categories"
                ],
                "summary": "Returns 204 if success and 4xx error if failed",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Catering ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "categoryID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "new category name",
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/UpdateCategoryRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successfully updated"
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "catering categories"
                ],
                "summary": "Soft delete",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Catering ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Client ID",
                        "name": "clientId",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "categoryID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successfully deleted"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/caterings/{id}/clients/{clientId}/meals": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "catering meals"
                ],
                "summary": "GetByRange list of categories with dishes for passed meal ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Meal Start Date in 2020-01-01T00:00:00Z format",
                        "name": "startDate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Meal End Date in 2020-01-01T00:00:00Z format",
                        "name": "endDate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Catering ID",
                        "name": "id",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "Client ID",
                        "name": "clientId",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "dishes for passed day",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/GetMealsResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "catering meals"
                ],
                "summary": "Creates meal for certain client",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Catering ID",
                        "name": "id",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "Client ID",
                        "name": "clientId",
                        "in": "path"
                    },
                    {
                        "description": "meal reading",
                        "name": "payload",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/AddMealRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "created meal",
                        "schema": {
                            "$ref": "#/definitions/AddMealRequest"
                        }
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/caterings/{id}/clients/{clientId}/orders": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "caterings orders"
                ],
                "summary": "returns orders of provided client",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Catering ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Client ID",
                        "name": "clientId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Date query in YYYY-MM-DDT00:00:00Z format",
                        "name": "date",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Orders for clients",
                        "schema": {
                            "$ref": "#/definitions/swagger.SummaryOrdersResponse"
                        }
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/caterings/{id}/dishes": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "catering dishes"
                ],
                "summary": "Returns list of dishes",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Catering ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "categoryID",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of dishes",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DishRequest"
                            }
                        }
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "catering dishes"
                ],
                "summary": "Add dish for certain category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Catering ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "dish object",
                        "name": "payload",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/AddDishRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "dish object",
                        "schema": {
                            "$ref": "#/definitions/DishRequest"
                        }
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/caterings/{id}/dishes/{dishId}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "catering dishes"
                ],
                "summary": "Returns dishes",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Catering ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Dish ID",
                        "name": "dishId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of dishes",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DishRequest"
                            }
                        }
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "catering dishes"
                ],
                "summary": "Returns 204 if success and 4xx error if failed",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Catering ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Dish ID",
                        "name": "dishId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Dish object",
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/AddDishRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successfully updated"
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "catering dishes"
                ],
                "summary": "Soft delete",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Catering ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Dish ID",
                        "name": "dishId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successfully deleted"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/caterings/{id}/dishes/{dishId}/images": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "catering dishes"
                ],
                "summary": "Add image for certain dish",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Catering ID",
                        "name": "id",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "Dish ID",
                        "name": "dishId",
                        "in": "query"
                    },
                    {
                        "type": "file",
                        "description": "Image File",
                        "name": "image",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "id of default image",
                        "name": "id",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "default image",
                        "schema": {
                            "$ref": "#/definitions/ImageResponse"
                        }
                    },
                    "201": {
                        "description": "Image model",
                        "schema": {
                            "$ref": "#/definitions/ImageResponse"
                        }
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/caterings/{id}/dishes/{dishId}/images/{imageId}": {
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "catering dishes"
                ],
                "summary": "Updates image for certain dish",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Catering ID",
                        "name": "id",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "Image ID",
                        "name": "imageId",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "Dish ID",
                        "name": "dishId",
                        "in": "path"
                    },
                    {
                        "type": "file",
                        "description": "Image File",
                        "name": "image",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "default image",
                        "schema": {
                            "$ref": "#/definitions/ImageResponse"
                        }
                    },
                    "201": {
                        "description": "Image model",
                        "schema": {
                            "$ref": "#/definitions/ImageResponse"
                        }
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "catering dishes"
                ],
                "summary": "Soft delete",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Catering ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Image ID",
                        "name": "imageId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Dish ID",
                        "name": "dishId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successfully deleted"
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/caterings/{id}/schedules": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "caterings schedules"
                ],
                "summary": "Returns list of schedules",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Catering ID",
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of schedules",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CateringSchedule"
                            }
                        }
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/caterings/{id}/schedules/{scheduleId}": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "caterings schedules"
                ],
                "summary": "Returns 200 and updated model if success and 4xx error if failed",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Catering ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CateringSchedule ID",
                        "name": "scheduleId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "CateringSchedule model",
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/UpdateScheduleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CateringSchedule model",
                        "schema": {
                            "$ref": "#/definitions/CateringSchedule"
                        }
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/caterings/{id}/users": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "caterings users"
                ],
                "summary": "Returns list of catering users",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Catering ID",
                        "name": "id",
                        "in": "path"
                    },
                    {
                        "type": "integer",
                        "description": "used for pagination",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "used for pagination",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "used query search",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "used for role sort",
                        "name": "role",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Catering user",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/swagger.UserResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "caterings users"
                ],
                "summary": "Returns error or 201 status code if success",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Catering ID",
                        "name": "id",
                        "in": "path"
                    },
                    {
                        "description": "Catering user",
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/swagger.CateringUser"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Catering user",
                        "schema": {
                            "$ref": "#/definitions/swagger.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/caterings/{id}/users/{userId}": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "caterings users"
                ],
                "summary": "Returns error or 200 status code if success",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Catering ID",
                        "name": "id",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path"
                    },
                    {
                        "description": "Catering user",
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/swagger.CateringUserUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Catering user",
                        "schema": {
                            "$ref": "#/definitions/swagger.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "caterings users"
                ],
                "summary": "Returns error or 204 status code if success",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Catering ID",
                        "name": "id",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successfully deleted"
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/clients": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "clients"
                ],
                "summary": "Returns list of clients",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "used for pagination",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "used for pagination",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of clients",
                        "schema": {
                            "$ref": "#/definitions/GetClients"
                        }
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/clients/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "clients"
                ],
                "summary": "Returns info about client",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Client ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "client model",
                        "schema": {
                            "$ref": "#/definitions/ClientsResponse"
                        }
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "clients"
                ],
                "summary": "Returns 204 if success and 4xx error if failed",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Client ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "update client model",
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/UpdateClientRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successfully updated"
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "clients"
                ],
                "summary": "Soft delete",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Client ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successfully deleted"
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/clients/{id}/addresses": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "clients addresses"
                ],
                "summary": "Get list of addresses",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Client ID",
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "array of address readings",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AddressResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "clients addresses"
                ],
                "summary": "Add address for certain client",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Client ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "address object",
                        "name": "payload",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/AddAddressRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "address object",
                        "schema": {
                            "$ref": "#/definitions/AddressResponse"
                        }
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/clients/{id}/addresses/{addressId}": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "clients addresses"
                ],
                "summary": "Returns 204 if success and 4xx error if failed",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Client ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Address ID",
                        "name": "addressId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "address object",
                        "name": "payload",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/AddAddressRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successfully updated"
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "clients addresses"
                ],
                "summary": "Soft delete",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Client ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Address ID",
                        "name": "addressId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successfully deleted"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/clients/{id}/auto-approve": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "clients"
                ],
                "summary": "Returns 204 if success and 4xx error if failed",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Client ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "update auto approve",
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/UpdateAutoApprove"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successfully updated"
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/clients/{id}/order-status": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "clients orders"
                ],
                "summary": "returns status of order",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Client ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Date query in YYYY-MM-DDT00:00:00Z format",
                        "name": "date",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "order status",
                        "schema": {
                            "$ref": "#/definitions/swagger.OrderStatus"
                        }
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/clients/{id}/orders": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "clients orders"
                ],
                "summary": "returns orders of provided client",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Client ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Date query in YYYY-MM-DDT00:00:00Z format",
                        "name": "date",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Orders for clients",
                        "schema": {
                            "$ref": "#/definitions/swagger.SummaryOrdersResponse"
                        }
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "clients orders"
                ],
                "summary": "approve user orders",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Client ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Date query in YYYY-MM-DDT00:00:00Z format",
                        "name": "date",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully Approved orders"
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/clients/{id}/schedules": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "clients schedules"
                ],
                "summary": "Returns list of schedules",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Client ID",
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of schedules",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/GetClientSchedulesResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/clients/{id}/schedules/{scheduleId}": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "clients schedules"
                ],
                "summary": "Returns 200 and updated model if success and 4xx error if failed",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Client ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Client Schedule ID",
                        "name": "scheduleId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Client Schedule model",
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/UpdateScheduleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Client Schedule model",
                        "schema": {
                            "$ref": "#/definitions/GetClientSchedulesResponse"
                        }
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/clients/{id}/users": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "clients users"
                ],
                "summary": "Returns list of client users",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Client ID",
                        "name": "id",
                        "in": "path"
                    },
                    {
                        "type": "integer",
                        "description": "used for pagination",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "used for pagination",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "used query search",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "used for role sort",
                        "name": "role",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "used for status sort",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of client users",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/swagger.UserResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "clients users"
                ],
                "summary": "Returns error or 201 status code if success",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Client ID",
                        "name": "id",
                        "in": "path"
                    },
                    {
                        "description": "Client user",
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/swagger.ClientUser"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Client user",
                        "schema": {
                            "$ref": "#/definitions/swagger.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/clients/{id}/users/{userId}": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "clients users"
                ],
                "summary": "Returns error or 200 status code if success",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Client ID",
                        "name": "id",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path"
                    },
                    {
                        "description": "Client user",
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/swagger.ClientUserUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Client user",
                        "schema": {
                            "$ref": "#/definitions/swagger.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "clients users"
                ],
                "summary": "Returns error or 204 status code if success",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Client ID",
                        "name": "id",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successfully deleted"
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/images": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "catering images"
                ],
                "summary": "Returns list of images",
                "responses": {
                    "200": {
                        "description": "List of images",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/GetImagesResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/is-authenticated": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Returns user info if authorized",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/swagger.UserResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Returns info about user",
                "parameters": [
                    {
                        "description": "User Credentials",
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/swagger.UserResponse"
                        }
                    },
                    "401": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/logout": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Removes cookie if set",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/{id}/orders": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users orders"
                ],
                "summary": "returns orders of provided user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Date query in YYYY-MM-DDT00:00:00Z format",
                        "name": "date",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Orders for user",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/swagger.UserOrder"
                            }
                        }
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users orders"
                ],
                "summary": "Returns error or 201 status code if success",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "Date query in YYYY-MM-DDT00:00:00Z format",
                        "name": "date",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "User order",
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/swagger.OrderRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Order for user",
                        "schema": {
                            "$ref": "#/definitions/swagger.UserOrder"
                        }
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/{id}/orders/{orderId}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users orders"
                ],
                "summary": "Returns error or 204 status code if success",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "Order ID",
                        "name": "orderId",
                        "in": "path"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successfully canceled"
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "AddAddressRequest": {
            "type": "object",
            "required": [
                "city",
                "floor",
                "house",
                "street"
            ],
            "properties": {
                "city": {
                    "type": "string"
                },
                "floor": {
                    "type": "integer"
                },
                "house": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                }
            }
        },
        "AddCategoryRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "date": {
                    "type": "string",
                    "example": "2020-06-29T00:00:00Z"
                },
                "name": {
                    "type": "string",
                    "example": "закуски"
                }
            }
        },
        "AddDishRequest": {
            "type": "object",
            "required": [
                "categoryId",
                "name",
                "price",
                "weight"
            ],
            "properties": {
                "categoryId": {
                    "type": "string"
                },
                "desc": {
                    "type": "string",
                    "example": "Очень вкусный"
                },
                "name": {
                    "type": "string",
                    "example": "грибной суп"
                },
                "price": {
                    "type": "number",
                    "example": 120
                },
                "weight": {
                    "type": "number",
                    "example": 250
                }
            }
        },
        "AddMealRequest": {
            "type": "object",
            "required": [
                "date",
                "dishes"
            ],
            "properties": {
                "date": {
                    "type": "string",
                    "example": "2020-06-20T00:00:00Z"
                },
                "dishes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "AddNameRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "example": "aisnovations"
                }
            }
        },
        "AddressResponse": {
            "type": "object",
            "required": [
                "city",
                "floor",
                "house",
                "street"
            ],
            "properties": {
                "city": {
                    "type": "string"
                },
                "floor": {
                    "type": "integer"
                },
                "house": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                }
            }
        },
        "CategoryResponse": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "clientId": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "CateringSchedule": {
            "type": "object",
            "properties": {
                "day": {
                    "type": "integer"
                },
                "end": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isWorking": {
                    "type": "boolean"
                },
                "start": {
                    "type": "string"
                }
            }
        },
        "CateringsResponse": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "ClientsResponse": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "DishRequest": {
            "type": "object",
            "required": [
                "name",
                "price",
                "weight"
            ],
            "properties": {
                "categoryId": {
                    "type": "string"
                },
                "desc": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Image"
                    }
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "weight": {
                    "type": "number"
                }
            }
        },
        "ErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "error": {
                    "type": "string"
                }
            }
        },
        "GetCateringsResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CateringsResponse"
                    }
                },
                "page": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "GetClientSchedulesResponse": {
            "type": "object",
            "properties": {
                "cateringEnd": {
                    "type": "string"
                },
                "cateringStart": {
                    "type": "string"
                },
                "day": {
                    "type": "integer"
                },
                "end": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isWorking": {
                    "type": "boolean"
                },
                "start": {
                    "type": "string"
                }
            }
        },
        "GetClients": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/swagger.Client"
                    }
                },
                "page": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "GetImagesResponse": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                }
            }
        },
        "GetMealsResponse": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "dishes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DishRequest"
                    }
                },
                "mealId": {
                    "type": "string"
                },
                "person": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "Image": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                }
            }
        },
        "ImageResponse": {
            "type": "object",
            "required": [
                "path"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                }
            }
        },
        "LoginRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "admin@meals.com"
                },
                "password": {
                    "type": "string",
                    "example": "Password12!"
                }
            }
        },
        "UpdateAutoApprove": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "UpdateCategoryRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "example": "веган"
                }
            }
        },
        "UpdateClientRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "cateringId": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "example": "aisnovations"
                }
            }
        },
        "UpdateScheduleRequest": {
            "type": "object",
            "properties": {
                "end": {
                    "type": "string"
                },
                "isWorking": {
                    "type": "boolean"
                },
                "start": {
                    "type": "string"
                }
            }
        },
        "api.Category": {
            "type": "object"
        },
        "swagger.CateringClientSwagger": {
            "type": "object",
            "properties": {
                "client": {
                    "type": "object",
                    "$ref": "#/definitions/swagger.ClientInfo"
                },
                "ordersDishes": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "swagger.CateringUser": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "d.novikov@wellyes.ru"
                },
                "firstName": {
                    "type": "string",
                    "example": "Dmitry"
                },
                "lastName": {
                    "type": "string",
                    "example": "Novikov"
                }
            }
        },
        "swagger.CateringUserUpdate": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "d.novikov@wellyes.ru"
                },
                "firstName": {
                    "type": "string",
                    "example": "Dmitry"
                },
                "lastName": {
                    "type": "string",
                    "example": "Novikov"
                }
            }
        },
        "swagger.Client": {
            "type": "object",
            "properties": {
                "autoApproveOrders": {
                    "type": "boolean"
                },
                "cateringId": {
                    "type": "string"
                },
                "cateringName": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "swagger.ClientInfo": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "swagger.ClientUser": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "d.novikov@wellyes.ru"
                },
                "firstName": {
                    "type": "string",
                    "example": "Dmitry"
                },
                "floor": {
                    "type": "integer",
                    "example": 5
                },
                "lastName": {
                    "type": "string",
                    "example": "Novikov"
                },
                "role": {
                    "type": "string",
                    "example": "User"
                }
            }
        },
        "swagger.ClientUserUpdate": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "d.novikov@wellyes.ru"
                },
                "firstName": {
                    "type": "string",
                    "example": "Dmitry"
                },
                "floor": {
                    "type": "integer",
                    "example": 5
                },
                "lastName": {
                    "type": "string",
                    "example": "Novikov"
                },
                "role": {
                    "type": "string",
                    "example": "User"
                }
            }
        },
        "swagger.GetCateringClientsSwagger": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/swagger.CateringClientSwagger"
                    }
                },
                "page": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "swagger.ItemsSummaryOrder": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "swagger.Order": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "dishId": {
                    "type": "string"
                }
            }
        },
        "swagger.OrderItem": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "integer"
                }
            }
        },
        "swagger.OrderRequest": {
            "type": "object",
            "required": [
                "items"
            ],
            "properties": {
                "comment": {
                    "type": "string"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/swagger.Order"
                    }
                }
            }
        },
        "swagger.OrderStatus": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                }
            }
        },
        "swagger.SummaryOrder": {
            "type": "object",
            "properties": {
                "categoryId": {
                    "type": "string"
                },
                "categoryName": {
                    "type": "string"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/swagger.ItemsSummaryOrder"
                    }
                }
            }
        },
        "swagger.SummaryOrdersResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "summary": {
                    "type": "object",
                    "$ref": "#/definitions/swagger.SummaryOrder"
                },
                "summaryTotal": {
                    "type": "integer"
                },
                "userOrders": {
                    "type": "object",
                    "$ref": "#/definitions/swagger.SummaryUserOrder"
                }
            }
        },
        "swagger.SummaryUserOrder": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "floor": {
                    "type": "integer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/swagger.ItemsSummaryOrder"
                    }
                },
                "name": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "swagger.UserOrder": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/swagger.OrderItem"
                    }
                },
                "orderId": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "swagger.UserResponse": {
            "type": "object",
            "properties": {
                "cateringId": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "companyType": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "floor": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        }
    }
}